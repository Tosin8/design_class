 
Microinteraction
______________________

7 Simple Microinteractions to Improve Prototypes.
Source: Toptal. 
References : using framer studio

 The 7 prototypes: 
* The action button
* Interactive switches
* List item swap action
* Button loader: It's very useful interaction for actions that require loading or wait times for the user.
* Pull to refresh
* Dragging Interaction:  while dragging an item inside an app, there is always something happening with the item itself, Sometimes the item shrinks, maybe other items are blurred, or the opacity changes.
* Multiple 'like' buttons

________________________________
Importance of microinteraction in ux
Source: JustInMind 

* They boost user retention: creating small moments of delight - 
     These moments all contribute towards improving the user experience and increasing the likelihood that users will keep using the product.
* They create WOW moments and enhance branding - 
     In growth hacking, these moments can also lead a WOW moment, which is the moment which is the point during the onboarding phase when a user establishes that your product is the right fit for them.
* They boost usability and intuitiveness - 
       they are a way of providing the user with constant feedback, by telling them both what the system is doing and letting them know when their actions have been successfully registered by the website or app.

Types of microinteraction
____________________________ 
Understanding fundamentals of the microinteraction.

* Tap effects e.g: hearting a tweet on Twitter, Highlighting selected fields on forms
* Swipe effects
* Tap and hold effects e.g: Facebook react feature button. 
* Scroll-into-view
* Pull-to-refresh
* Progress bar
* Errors
* Sound
* Button state changes
* Tactile
* Mouse over / hover effects : Hootsuite magnetic cards, 
* Slide-in/out
* System feedback
* Page transitions (fade, explode, etc)


Best practices for designing microinteractions
______________________________________________
* Define what interaction will take place and how long it will last
* Don’t make a user mouse over an element to reveal more information
* Don’t drown your design in microinteractions
* Remember the differences between desktop and mobile interactions
* Try to keep the mobile and desktop experience as similar as possible

The four parts of microinteraction
_________________________________________
1. Triggers: will the user or the system trigger the microinteraction? 
If it’s the system, what input does it need?

2. Rules: what should happen when the user or system triggers your microinteraction? 
A tap, a click? A mouse over? A scroll?

3. Feedback: use your microinteraction to communicate what’s happening to your user.
 Is the page loading? Is the button clickable? Is there another user sending a message?

4. Loops and Modes: think ahead, should the microinteraction
still be possible after certain conditions have been met?
If a button is greyed out, should it still change color on mouse over?

 
Push Notification Best Practices: 7 Questions Designers Should Ask
Source: Toptal
___________________________________________________________________
Push notifications are among the most potent tools being used for communicating with users.
When apps send these short messages, they pop up on devices—even with the screen locked—making them almost impossible to ignore.
 
1. Should Your Message Be a Mobile Push Notification—or Something Else?
Considering whether it might be more appropriate to send an email or text instead, 
 * SMS messages are best for time-sensitive or critical information.
 An airline, for instance, should use SMS messages to communicate gate or schedule changes since a mobile push
 would not reach passengers who have notification permissions disabled. 
SMS messages are also better for information that might have to be accessed later, such as an order confirmation, 
since mobile app push notifications are easily cleared with a single tap
and are often unretrievable.

Mobile push notifications are effective for delivering important but non-urgent information, 
such as an announcement about a sale or a request that users agree to new app permissions.

2. Did You Request Permission to Send a Push Notification?
 Many apps ask for permission to send notifications immediately after installation. 
This makes sense if reminders are essential to an app’s user experience—for instance, to be effective, 
habit-tracking apps need to regularly nudge users. But in most cases, it’s actually best to wait to ask
 for permission until someone has used the app a few times and seen the value it provides.

3.Does the Notification Deliver Personalized Value to the User?
 

Mobile app onboarding: best practices and examples
Source: JustInMind 
_____________________________________________

 On app onboarding: the two approaches
we can all agree that the design team needs to do everything they can to encourage users to get past the initial learning curve 
and flatten that app abandonment rate.
1. Have a tailored plan : it’s important to treat  app onboarding as another crucial element in the user experience. 
Just like we carry out extensive research on who users are and create an entire design around the user’s mental models and personas, 
we must create an onboarding experience that reflects who the user is.

Types of onboarding
__________________________________
* Benefits oriented onboarding
* Function oriented onboarding
* Progressive onboarding

Factors to consider 
________________________
* Firstly, consider your users. Are they young and tech-savy?
 Are they familiar with the main function of the app? 
You want to understand who they are and how much of an introduction they need in order to obtain
 some benefit from the product.
Another important aspect of users is their expectations.
 You don’t want to bombard them with information, 
but you can’t let the product fall short of expectations.

* Secondly, consider your product. 
Does it have many different features? Is it complex in nature?
How long is the learning curve? Can we shorten that curve?
 You want to showcase the product’s strengths 
and get the user to see the big advantages that are waiting for them at the end of
 the learning process.

2. Tell users how much they have left
Nobody likes waiting. There’s a reason why app onboarding sequences tend to be brief 
and to the point. Users tend to be excited to try a new app for the first time, 
to explore and mess around in their own time.
 Onboarding can be a powerful way to jumpstart that exploration of possibilities, 
but it can’t stretch on for too long – user’s excitement doesn’t last forever.

That’s why we see progress bars in the checkout process of so many platforms.
 Users want to know their progress, and how long the whole onboarding sequence is –
and as designers, we like to please users.

3. Make it casual and interactive
Most people don’t want to be lectured or even attend a class on the brand new app they just downloaded. 
They want to jump straight into the user experience. That’s why it’s always a good idea to lighten the tone
 and turn the introductory class into a conversation. The truly great app onboarding sequences out there take
 this opportunity to add some brand personality, so that the whole thing feels like a simple chat with the app.
 

Motivation
How to make a casual browser an intrigued user
__________________________________________________
* An enabling behavior
* A motivating behavior
* A constraining behavior

4. Know the right moment to ask for things
This is a simple matter that can still arouse strong feelings in users. 
Some people simply don’t like apps bombarding them with requests to grant permissions,
 like push notifications, or personal information, like billing data. When it comes to onboarding, 
there’s such a thing as overstepping.

This is worth remembering when it comes to permissions, grants, sensitive information and even tasks 
that require general effort from users.
 For example, many great apps out there allow users to signup, 
explore and have fun before they start asking for more information 
to complete the user profile.

This is about postponing the things that require either effort of trust,
 giving the user some room to grow more familiar and comfortable with the product and the brand.

The wrap up: 
App onboarding is all about getting users to see the big benefits of having the app and showcasing 
the strongest points of the design. While there’s no one-size-fits-all approach when it comes to 
onboarding experiences, there’s a general goal of helping the user get set up and giving them the 
tools to enjoy the experience.


 Microinteractions: 
An Ultimate Guide to Improve User Experience
Source: explainard 
______________________________

7 Types of Microinteractions

There are many types of microinteractions. When to use one always depends on your purpose and case. 
We’ve gathered some of them.

1. Tap or Click 
You may have seen a button that can move when you hover on it on a website. 
That kind of microinteraction aims to tell visitors that the button is clickable. 
In many cases, tap or click microinteractions intend to drive action and conversion.

2. Hold Effects
Hold microinteractions are the best option for dropdown menus.
 It’s most suitable for mobile apps since they perform in limited screen space. 
For example, you can tap and hold the like button to bring out more reactions to a Facebook post.

3. Slide or Swipe Effects 
Slide or swipe microinteractions are best to pinpoint navigation or movement. 
For example, you can see the swipe simple animation in Instagram stories and
 slide microinteractions in a dating app.

4. Scroll-into-view
Scroll-into-view microinteractions intend to give more explanations, 
information, or options on a topic. This type of microinteractions is best for
 mobile apps.

5. Pull-to-refresh
Sometimes you need to pull your smartphone screen to refresh a page. 
When you do that, you can add microinteractions, such as loading animations,
 to make the waiting less boring.

6. Progress Bars
A progress bar usually comes to show the progress of something.
 You can easily find progress bars when uploading or downloading a file and submitting a form on a page.

7. Error Sounds
Error sounds primarily help users avoid mistakes when performing an action on a page. 
Sometimes, an error sound also plays a role as a notification to the users.

4 Reasons Why Microinteractions Are Important
While developing a website or app, minding about the microinteractions is
 vital to give users a wonderful cyber surfing experience.

There are more fundamental reasons why microinteractions are essential
 to web or app developers, which follows:

1. Make the Interface More User Friendly
Microinteractions can make the interface more user-friendly with visual or
 audio feedback for every action they take. 

Microinteractions can also guide users to take the next step
 without getting confused easily.

2. Create a More Delightful Experience
As microinteractions escort users during their interface time, 
they will experience a smooth web surfing experience. 

When users have a delightful browsing experience, it can increase web engagement,
 gather visitors, and build loyal users.

3. Make the Interface More Human
Microinteractions also intend to make the interaction two-way so that users
 don’t feel completely communicating with machines.
Users won’t feel alone during their interface, including during loading,
 filling forms, or waiting for progress.

4. Prevent Users Make Errors
One of the most valuable advantages of microinteractions is to prevent 
users from making errors. Like when confirming a new password or filling 
out a tangible form.
When users make a mistake or error, microinteractions will give feedback so that 
users can fix it immediately.




 
