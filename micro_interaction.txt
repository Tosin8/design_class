 
Microinteraction
______________________

7 Simple Microinteractions to Improve Prototypes.
Source: Toptal. 
References : using framer studio

 The 7 prototypes: 
* The action button
* Interactive switches
* List item swap action
* Button loader: It's very useful interaction for actions that require loading or wait times for the user.
* Pull to refresh
* Dragging Interaction:  while dragging an item inside an app, there is always something happening with the item itself, Sometimes the item shrinks, maybe other items are blurred, or the opacity changes.
* Multiple 'like' buttons

________________________________
Importance of microinteraction in ux
Source: JustInMind 

* They boost user retention: creating small moments of delight - 
     These moments all contribute towards improving the user experience and increasing the likelihood that users will keep using the product.
* They create WOW moments and enhance branding - 
     In growth hacking, these moments can also lead a WOW moment, which is the moment which is the point during the onboarding phase when a user establishes that your product is the right fit for them.
* They boost usability and intuitiveness - 
       they are a way of providing the user with constant feedback, by telling them both what the system is doing and letting them know when their actions have been successfully registered by the website or app.

Types of microinteraction
____________________________ 
Understanding fundamentals of the microinteraction.

* Tap effects e.g: hearting a tweet on Twitter, Highlighting selected fields on forms
* Swipe effects
* Tap and hold effects e.g: Facebook react feature button. 
* Scroll-into-view
* Pull-to-refresh
* Progress bar
* Errors
* Sound
* Button state changes
* Tactile
* Mouse over / hover effects : Hootsuite magnetic cards, 
* Slide-in/out
* System feedback
* Page transitions (fade, explode, etc)


Best practices for designing microinteractions
______________________________________________
* Define what interaction will take place and how long it will last
* Don’t make a user mouse over an element to reveal more information
* Don’t drown your design in microinteractions
* Remember the differences between desktop and mobile interactions
* Try to keep the mobile and desktop experience as similar as possible

The four parts of microinteraction
_________________________________________
1. Triggers: will the user or the system trigger the microinteraction? 
If it’s the system, what input does it need?

2. Rules: what should happen when the user or system triggers your microinteraction? 
A tap, a click? A mouse over? A scroll?

3. Feedback: use your microinteraction to communicate what’s happening to your user.
 Is the page loading? Is the button clickable? Is there another user sending a message?

4. Loops and Modes: think ahead, should the microinteraction
still be possible after certain conditions have been met?
If a button is greyed out, should it still change color on mouse over?

 
Push Notification Best Practices: 7 Questions Designers Should Ask
Source: Toptal
___________________________________________________________________
Push notifications are among the most potent tools being used for communicating with users.
When apps send these short messages, they pop up on devices—even with the screen locked—making them almost impossible to ignore.
 
1. Should Your Message Be a Mobile Push Notification—or Something Else?
Considering whether it might be more appropriate to send an email or text instead, 
 * SMS messages are best for time-sensitive or critical information.
 An airline, for instance, should use SMS messages to communicate gate or schedule changes since a mobile push
 would not reach passengers who have notification permissions disabled. 
SMS messages are also better for information that might have to be accessed later, such as an order confirmation, 
since mobile app push notifications are easily cleared with a single tap
and are often unretrievable.

Mobile push notifications are effective for delivering important but non-urgent information, 
such as an announcement about a sale or a request that users agree to new app permissions.

2. Did You Request Permission to Send a Push Notification?
 Many apps ask for permission to send notifications immediately after installation. 
This makes sense if reminders are essential to an app’s user experience—for instance, to be effective, 
habit-tracking apps need to regularly nudge users. But in most cases, it’s actually best to wait to ask
 for permission until someone has used the app a few times and seen the value it provides.

3.Does the Notification Deliver Personalized Value to the User?



